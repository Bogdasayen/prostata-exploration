#+TITLE: Microsimulation package for R

#+OPTIONS: toc:nil
#+OPTIONS: num:nil
#+OPTIONS: html-postamble:nil

# Babel settings
#+PROPERTY: session *R-org* 
# +PROPERTY: cache yes 
# +PROPERTY: results output graphics 
# +PROPERTY: exports both 
# +PROPERTY: tangle yes
# +PROPERTY: exports both 

[[https://en.wikipedia.org/wiki/Microsimulation][Microsimulation]] is a form of individual-based stochastic simulation. In continuous time, microsimulation is closely related to [[https://en.wikipedia.org/wiki/Discrete_event_simulation][discrete event simulation]], and in discrete time it is closely related to [[https://en.wikipedia.org/wiki/Agent-based_model][agent-based models]]. In econometrics and health care, microsimulation is often used to model policy changes. Our implementation is in continuous time and uses event-based discrete event simulation for the model specification.

The package provides several approaches for microsimulation and event-based, discrete event simulation. The package includes an R implementation of discrete event simulation, building on several R5 classes. This implementation is useful from a pedagogical perspective, but it is slow for larger microsimulations. For speed, we also provide C++ classes for discrete event simulation, building on several well established libraries, including the [[http://www.inf.usi.ch/carzaniga/ssim/index.html][SSIM]] C++ discrete event simulation library, the [[http://www.iro.umontreal.ca/~lecuyer/myftp/streams00/][RngStream]] C library for common random numbers, the [[http://www.boost.org/][Boost]] libraries for making many C++11 tools available to C++98, and [[http://www.rcpp.org/][Rcpp]] for providing glue between R, R's C API and C++. 

We specifically developed this package for modelling the cost-effectiveness of cancer screening, where there are many (e.g. 10^7) individuals who are followed from birth to death. Notably, we provide a complete prostate cancer screening model, including tools for cost-effectiveness analysis. 

#+BEGIN_SRC R
  require(microsimulation)
  sim1 <- callFhcrc(1e4,mc.cores=3,screen="screenUptake")
#+END_SRC

#+RESULTS:

#+BEGIN_SRC R :file inst/1.png :session :results output graphics :exports both
plot(sim1,ylab="Incidence rate",xlab="Age (years)")
#+END_SRC

#+RESULTS:
[[file:inst/1.png]]



