
#include <R.h>
#include <Rdefines.h>
#include <Rinternals.h>
#include <Rmath.h>

#include <string>

extern "C" {

#include "R_RNG.h"
#include "RngStreams.h"
#include "Rng_wrapper.h"

#define WithRNG(rng,expr) (rng->set(), expr)

  Rng::Rng(std::string n) {
    stream = RngStream_CreateStream(n.c_str());
  }
  Rng::~Rng() {
    RngStream_DeleteStream(&stream);
  };
  void Rng::set() {
    // rstream_setRNG((RSTREAM_SAMPLE_FUNC*) RngStream_RandU01, stream);
    RngStream_setRNG(stream);
  }
  void Rng::nextSubstream() {
    set(); // is this useful?
    RngStream_ResetNextSubstream(stream);
  }

  void test_rstream2(double * x) {
    //unsigned long seed[6] = {12345,12345,12345,12345,12345,12345};
    //RngStream_SetPackageSeed(seed);
    Rng * s1 = new Rng("s1");
    Rng * s2 = new Rng("s2");
    // s1->set();
    x[0]=WithRNG(s1,rexp(1.0));
    x[1]=WithRNG(s2,rexp(1.0));
    s1->nextSubstream();
    x[2]=rexp(1.0);
    // current_stream.sample = NULL;
    // current_stream.state = NULL;
    delete s1;
    delete s2;
  }
  
} // extern "C"

